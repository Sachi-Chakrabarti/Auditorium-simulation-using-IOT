mk#define BLYNK_TEMPLATE_NAME " "
#define BLYNK_AUTH_TOKEN " "

#include <AccelStepper.h>
#include <ESP8266WiFi.h>
#include <BlynkSimpleEsp8266.h>

#define BLYNK_PRINT Serial

char ssid[] = "WIFI NAME";
char pass[] = "WIFI PASSWORD";

// Motor pin definitions:
#define motorPin1 D5  // IN1 on the ULN2003 driver
#define motorPin2 D6  // IN2 on the ULN2003 driver
#define motorPin3 D7  // IN3 on the ULN2003 driver
#define motorPin4 D8  // IN4 on the ULN2003 driver

// Define the AccelStepper interface type: 4 wire motor in half step mode:
#define MotorInterfaceType 8

// Initialize with pin sequence IN1-IN3-IN2-IN4
AccelStepper stepper = AccelStepper(MotorInterfaceType, motorPin1, motorPin3, motorPin2, motorPin4);

const int in = D0;
const int out = D1;
int count = 0;
int left = 0;
int flag=0;

#define LM35_PIN A0
#define BUZZER_PIN D2

float celsius;

void setup() {
  Serial.begin(9600);
  Blynk.begin(BLYNK_AUTH_TOKEN, ssid, pass);
  pinMode(in, INPUT);
  pinMode(out, INPUT);
  pinMode(BUZZER_PIN, OUTPUT);
  stepper.setMaxSpeed(1000);
}

void loop() {

  Blynk.run();

  int in_value = digitalRead(in);
  int out_value = digitalRead(out);
  

  if (in_value == LOW) {
    count++;
    Serial.println("INC:" + String(count));
    Blynk.virtualWrite(V0, count);
    if (count == 0) Blynk.virtualWrite(V3, 1);
    else if (count != 0) Blynk.virtualWrite(V3, 0);
    int analogValue = analogRead(LM35_PIN);
    float millivolts = (analogValue / 1024.0) * 3300;
  celsius = (millivolts / 10) + 30;
   Serial.print("in DegreeC=   ");
   Serial.println(celsius);
   if (celsius > 2000) {
    // Turn on the buzzer
    digitalWrite(BUZZER_PIN, HIGH);
    Blynk.virtualWrite(V4, 1);
  } else {
    digitalWrite(BUZZER_PIN, LOW);
    Blynk.virtualWrite(V4, 0);
  }
    delay(500);
  }


  if (out_value == LOW) {
    count--;
    left++;
    Serial.println("DEC:" + String(count));
    Blynk.virtualWrite(V1, left);
    if (count == 0) Blynk.virtualWrite(V3, 1);
    else if (count != 0) Blynk.virtualWrite(V3, 0);
    delay(500);
  }

  stepper.runSpeed();
}

BLYNK_WRITE(V2) {
  int buttonClockwiseState = param.asInt();

  if (buttonClockwiseState == HIGH) {
    stepper.setSpeed(-500);
    stepper.enableOutputs();
    Serial.println("Motor Running");
  } else {
    stepper.setSpeed(0);
    stepper.disableOutputs();
    Serial.println("Motor Stopped");
  }
}
